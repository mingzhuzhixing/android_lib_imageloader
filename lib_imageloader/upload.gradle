apply plugin: 'maven'

//判断是环境 测试_snapshot  正式环境不带
def isReleaseBuild() {
    return VERSION_NAME.toUpperCase().contains("SNAPSHOT")
}
//获取远程仓库密码
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
//获取远程仓库密码
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
//获取远程仓库地址
def getRepositoryUrl() {
    return isReleaseBuild() ? RELEASE_REPOSITORY_URL : SNAPSHOT_REPOSITORY_URL
}
afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = VERSION_NAME

                //配置上传到远程仓库
//                repository(url: getRepositoryUrl()) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }

                //本地仓库
                repository(url: uri('../repository/maven-releases'))
            }
        }
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    //解决 JavaDoc 中文注释生成失败的问题
    tasks.withType(Javadoc) {
        excludes = ['**/*.kt']
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}


//设置maven deployer 本地仓库
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            //设置插件的GAV参数
//            pom.groupId = 'com.nj.baijiayun'
//            pom.artifactId = 'pushplugin'
//            pom.version = "1.0.0"
//            //文件发布到下面目录
//            repository(url: uri('../release'))
//        }
//    }
//}

